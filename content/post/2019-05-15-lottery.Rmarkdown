---
title: Lottery
author: ''
date: '2019-05-15'
slug: lottery
categories:
  - R
tags: []
lastmod: '2019-05-15T14:02:02-04:00'
keywords: []
description: 'post8: visualize lottery numbers'
comment: no
toc: no
autoCollapseToc: no
contentCopyright: no
reward: no
mathjax: no
---

<!--more-->

```{r message=FALSE}
library(tidyverse)
library(rvest)
library(janitor)
library(lubridate)
```


```{r read_RDS, eval=TRUE, include=FALSE}
lott <- readRDS("/Users/heverz/Documents/R_projects/muaydata/static/data_post8/lott.RDS")
```

```{r get_megamilion, eval=FALSE}
extract_table <- function(url) {
  # extract values
  url  %>%  
  read_html() %>% 
  html_nodes(".text td") %>% 
  html_text() %>%  # is a vector that needs to be cleaned up
  {
    .[. != ""] %>% 
    .[10:(length(.)-6)]
  }  %>% 
  {
    tibble(
      date = as.Date(str_subset(., "^[:alpha:]"),format = "%A, %B %d, %Y"),
      jackpot = str_subset(., "^\\$"), 
      numbers = str_subset(., "^[:digit:]{2}\\s"),
      megaplier = as.numeric(.[str_count(.) == 1])
    )
  } %>% 
  separate(numbers, paste0("x", 1:6)) %>% 
  mutate_at(vars(starts_with("x")), as.numeric) %>% 
  mutate(jackpot = as.numeric(str_extract(jackpot,  "[0-9]{1,}")))
}


pages <- 1:62 # pages >63  do not have a megaplier
urls <- paste0("https://www.usamega.com/mega-millions-history.asp?p=", pages)

lott <- map_dfr(urls, extract_table)
```


```{r}
# we need to have 6 values for the x and 6 for the y so we are going to take 2 extractions of numbers

xy <- lott %>% 
  mutate(biweek = rep(1:(nrow(.)/2), each = 2),  # we create a biweek ID (same ID for points of the same shape)
         xy = rep(c("x", "y"), nrow(.)/2))  %>%  # xy, one extraction will be the x coordinate and one the y
  gather(point, value,x1:x6) %>%  # wide to long
  split.data.frame(.$xy)  #we split the dataframe based on xy
  names(xy) <- c("x", "y")
 
# lott_cl <- 
lott_cl <- xy$x %>%    # no we join them based on their biweek ID
  select(-c(xy)) %>% 
  inner_join(xy$y, by = c("biweek", "point")) %>% 
  select(order(colnames(.)))
 
# and voil√† 
glimpse(lott_cl)
```
Now we use the megaplier and the jackpots number to create RGB colors
```{r}
lott_cl <- lott_cl %>% 
  unite("color", matches("^(j|m)"), sep = "", remove = FALSE) %>% 
  mutate(colour = as.numeric(color))

summary(lott_cl$color)
```

```{r}
library(gapminder)
library(gganimate)
lott_cl %>% 
  ggplot(aes(value.x, value.y, fill = rgb(color))) +
  geom_polygon() +
  scale_fill_identity() +
  labs( x = 'exgracgion1', y = 'extraction2') +
    transition_states(biweek) +
   ease_aes('linear') +
   enter_fade(alpha = 0.2) +
   exit_shrink()
  
  
```

```{r}
lott_cl %>% 
  filter(biweek == 1) 
```




 




```{r example}
library(gapminder)
library(gg animate)

ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  facet_wrap(~continent) +
  # Here comes the gganimate specific bits
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  ease_aes('linear')

```



